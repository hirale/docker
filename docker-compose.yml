version: "3.7"
services:
  portainer:
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    container_name: portainer
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.2
  ssl:
    build: nginx-ssl
    container_name: nginx_ssl
    volumes:
      - ${NGINXSSL_CONFIG}:/etc/nginx
    restart: always
    ports:
      - 443:443
    networks:
      frontend:
        ipv4_address: 172.10.0.2
      backend:
        ipv4_address: 172.20.0.3
    depends_on:
      - nginx
  nginx:
    build:
      context: ./nginx
      args:
        MAKE_J: 4
        NGINX_VERSION: ${NGINX_VERSION}
        PAGESPEED_VERSION: ${PAGESPEED_VERSION}
        LIBPNG_VERSION: ${LIBPNG_VERSION}
    container_name: nginx
    working_dir: /var/www/html
    volumes:
      - ${NGINX_ROOT}:/var/www/html
      - ${NGINX_CONFIG}:/etc/nginx
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.4
    depends_on:
      - php-fpm73
      - php-fpm72
  php-fpm72:
    build:
      context: ./php-fpm72
      args:
        PHP_72VERSION: ${PHP_72VERSION}
    container_name: php-fpm72
    working_dir: /var/www/html/
    volumes:
      - ${NGINX_ROOT}:/var/www/html/
      - ${PHP72_CONFIG}:/usr/local/etc/
      - ${PHP72_SUPERVISORD}:/etc/supervisor/conf.d/supervisord.conf
      - ${CRONTAB72}:/var/spool/cron/crontabs/
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.6
    depends_on:
      - redis
      - mysql
      - memcached
  php-fpm73:
    build:
      context: ./php-fpm73
      args:
        PHP_73VERSION: ${PHP_73VERSION}
    container_name: php-fpm73
    working_dir: /var/www/html/
    volumes:
      - ${NGINX_ROOT}:/var/www/html/
      - ${PHP73_CONFIG}:/usr/local/etc/
      - ${PHP73_SUPERVISORD}:/etc/supervisor/conf.d/supervisord.conf
      - ${CRONTAB73}:/var/spool/cron/crontabs/
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.7
    depends_on:
      - redis
      - mysql
      - memcached
  php-fpm74:
    build:
      context: ./php-fpm74
      args:
        PHP_74VERSION: ${PHP_74VERSION}
    container_name: php-fpm74
    working_dir: /var/www/html/
    volumes:
      - ${NGINX_ROOT}:/var/www/html/
      - ${PHP74_CONFIG}:/usr/local/etc/
      - ${PHP74_SUPERVISORD}:/etc/supervisor/conf.d/supervisord.conf
      - ${CRONTAB74}:/var/spool/cron/crontabs/
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.8
    depends_on:
      - redis
      - mysql
      - memcached
  webhook:
    build:
      context: ./webhook
      args:
        PHP_73VERSION: ${PHP_73VERSION}
    container_name: webhook
    working_dir: /var/www/html/
    volumes:
      - ${NGINX_ROOT}:/var/www/html/
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.9
    secrets:
      - host_ssh_key
  memcached:
    image: "memcached:latest"
    container_name: memcached
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.10
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${MYSQL_TZ}
    ports:
      - 3306:3306
    volumes:
      - ${MYSQL_DATA}:/var/lib/mysql
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.11
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.12
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.13
  elasticsearch:
    build:
      context: ./elasticsearch
      args:
        ELK_VERSION: ${ELK_VERSION}
    container_name: elasticsearch
    restart: always
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
    networks:
      backend:
        ipv4_address: 172.20.0.14
  logstash:
    build:
      context: ./logstash
      args:
        ELK_VERSION: ${ELK_VERSION}
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
    networks:
      backend:
        ipv4_address: 172.20.0.15
    depends_on:
      - elasticsearch
  kibana:
    build:
      context: ./kibana
      args:
        ELK_VERSION: ${ELK_VERSION}
    container_name: kibana
    restart: always
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - 5601:5601
    networks:
      backend:
        ipv4_address: 172.20.0.16
    depends_on:
      - elasticsearch
volumes:
  portainer_data:
networks:
  frontend:
    ipam:
      driver: default
      config:
        - subnet: 172.10.0.0/16
  backend:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
secrets:
  host_ssh_key:
    file: ~/.ssh/id_ed25519
