version: "3.8"
services:
  nginx:
    build:
      context: ./nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    container_name: nginx
    working_dir: /var/www/html
    volumes:
      - ${WEB_ROOT}:/var/www/html
      - ${NGINX_CONFIG}:/etc/nginx
    restart: unless-stopped
    ports:
      - 443:443
    networks:
      backend:
        ipv4_address: 172.20.0.2
    depends_on:
      - php-fpm
  pagespeed:
    image: pagespeed/nginx-pagespeed
    container_name: pagespeed
    working_dir: /var/www/html
    volumes:
      - ./pagespeed/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${WEB_ROOT}:/var/www/html
    networks:
      backend:
        ipv4_address: 172.20.0.12
    restart: unless-stopped
  php7-fpm:
    build:
      context: ./php7-fpm
      args:
        PHP_VERSION: ${PHP7_VERSION}
    container_name: php7-fpm
    volumes:
      - ${WEB_ROOT}:/var/www/html/
      - ${PHP7_CONFIG}:/usr/local/etc
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.3
    depends_on:
      - mysql
  php-fpm:
    build:
      context: ./php-fpm
      args:
        PHP_VERSION: ${PHP_VERSION}
    container_name: php-fpm
    volumes:
      - ${WEB_ROOT}:/var/www/html/
      - ${PHP_CONFIG}:/usr/local/etc
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.8
    depends_on:
      - mysql
  php82-fpm:
    build:
      context: ./php82-fpm
      args:
        PHP_VERSION: ${PHP82_VERSION}
    container_name: php82-fpm
    volumes:
      - ${WEB_ROOT}:/var/www/html/
      - ${PHP82_CONFIG}:/usr/local/etc
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.9
    depends_on:
      - mysql
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${MYSQL_TZ}
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.4
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.5
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.6
  ofelia:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    restart: always
    depends_on:
      - php-fpm
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock:ro
      - ${OFELIA_CONFIG}:/etc/ofelia/config.ini
    networks:
      backend:
        ipv4_address: 172.20.0.7
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    networks:
      backend:
        ipv4_address: 172.20.0.10
  varnish:
    build:
      context: ./varnish
    container_name: varnish
    volumes:
      - ./varnish/default.vcl:/etc/varnish/default.vcl
    networks:
      backend:
        ipv4_address: 172.20.0.11
volumes:
  mysql:
networks:
  backend:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
